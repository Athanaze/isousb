{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2","program":"/home/sacha/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","quote","/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=1f3fcc9a6e38402f","-C","extra-filename=-1f3fcc9a6e38402f","--out-dir","/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps","-L","dependency=/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps","--extern","proc_macro2=/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps/libproc_macro2-efe4a301c404de01.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/sacha/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps/libquote-1f3fcc9a6e38402f.rmeta"},"prelude":{"crate_id":{"name":"quote","disambiguator":[1345738882218040880,10394262703642294550]},"crate_root":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src","external_crates":[{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13178520346727407053,4792203799537005979]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2148882322900320828,10090971091157684155]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9350415023647295219,11539366983612416085]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16918508776218136521,7301222204984185594]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8592614505596521046,3603009779144947114]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[11473471278279687867,9173974428352637418]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[6623483043773045031,8238845143598726372]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[16610075776745393193,18271409537166901206]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13539701924899711295,15639608856686263496]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5500391874567785391,134362444564425396]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16527680682914559102,12860669916872835133]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[12045043460455821405,1817909937932275375]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":16,"id":{"name":"proc_macro","disambiguator":[9802942093083950462,14743574981727116653]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","num":17,"id":{"name":"unicode_xid","disambiguator":[155738489569028445,5807566296866122487]}}],"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":0,"byte_end":15830,"line_start":1,"line_end":501,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3446,"byte_end":3452,"line_start":100,"line_end":100,"column_start":17,"column_end":23},"alias_span":null,"name":"Tokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3489,"byte_end":3497,"line_start":103,"line_end":103,"column_start":20,"column_end":28},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3597,"byte_end":3598,"line_start":109,"line_end":109,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"TokenNode, TokenTree, Span, TokenStream","parent":{"krate":0,"index":134}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":0,"byte_end":15830,"line_start":1,"line_end":501,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" This crate provides the [`quote!`] macro for turning Rust syntax tree data\n structures into tokens of source code.","sig":null,"attributes":[{"value":"! This crate provides the [`quote!`] macro for turning Rust syntax tree data","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"! structures into tokens of source code.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":79,"byte_end":121,"line_start":2,"line_end":2,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":122,"byte_end":125,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! [`quote!`]: macro.quote.html","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":126,"byte_end":158,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":159,"byte_end":162,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! Procedural macros in Rust receive a stream of tokens as input, execute","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":163,"byte_end":237,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"! arbitrary Rust code to determine how to manipulate those tokens, and produce","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":238,"byte_end":318,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! a stream of tokens to hand back to the compiler to compile into the caller's","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":319,"byte_end":399,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"! crate. Quasi-quoting is a solution to one piece of that -- producing tokens","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":400,"byte_end":479,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"! to return to the compiler.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":480,"byte_end":510,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":511,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! The idea of quasi-quoting is that we write *code* that we treat as *data*.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":515,"byte_end":593,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"! Within the `quote!` macro, we can write what looks like code to our text","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":594,"byte_end":670,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! editor or IDE. We get all the benefits of the editor's brace matching,","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":671,"byte_end":745,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! syntax highlighting, indentation, and maybe autocompletion. But rather than","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":746,"byte_end":825,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"! compiling that as code into the current crate, we can treat it as data, pass","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":826,"byte_end":906,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"! it around, mutate it, and eventually hand it back to the compiler as tokens","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":907,"byte_end":986,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! to compile into the macro caller's crate.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":987,"byte_end":1032,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1033,"byte_end":1036,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! This crate is motivated by the procedural macro use case, but is a","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1037,"byte_end":1107,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"! general-purpose Rust quasi-quoting library and is not specific to procedural","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1108,"byte_end":1188,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"! macros.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1189,"byte_end":1200,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1201,"byte_end":1204,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! *Version requirement: Quote supports any compiler version back to Rust's","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1205,"byte_end":1281,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"! very first support for procedural macros in Rust 1.15.0.*","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1282,"byte_end":1343,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1344,"byte_end":1347,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1348,"byte_end":1359,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1360,"byte_end":1378,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! quote = \"0.4\"","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1379,"byte_end":1396,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1397,"byte_end":1404,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1405,"byte_end":1408,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1409,"byte_end":1416,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"! #[macro_use]","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1417,"byte_end":1433,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"! extern crate quote;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"! #","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1458,"byte_end":1463,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"! # fn main() {}","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1464,"byte_end":1482,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1483,"byte_end":1490,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1491,"byte_end":1494,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1495,"byte_end":1508,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! The following quasi-quoted block of code is something you might find in [a]","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1513,"byte_end":1592,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"! procedural macro having to do with data structure serialization. The `#var`","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1593,"byte_end":1672,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! syntax performs interpolation of runtime variables into the quoted tokens.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1673,"byte_end":1751,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! Check out the documentation of the [`quote!`] macro for more detail about","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1752,"byte_end":1829,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"! the syntax. See also the [`quote_spanned!`] macro which is important for","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1830,"byte_end":1906,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"! implementing hygienic procedural macros.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1907,"byte_end":1951,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1952,"byte_end":1955,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! [a]: https://serde.rs/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1956,"byte_end":1982,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"! [`quote_spanned!`]: macro.quote_spanned.html","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":1983,"byte_end":2031,"line_start":49,"line_end":49,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2032,"byte_end":2035,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2036,"byte_end":2043,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"! # #[macro_use]","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2044,"byte_end":2062,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"! # extern crate quote;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2063,"byte_end":2088,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"! #","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2089,"byte_end":2094,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! # fn main() {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2095,"byte_end":2112,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"! #     let generics = \"\";","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2113,"byte_end":2141,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"! #     let where_clause = \"\";","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2142,"byte_end":2174,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"! #     let field_ty = \"\";","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2175,"byte_end":2203,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"! #     let item_ty = \"\";","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2204,"byte_end":2231,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"! #     let path = \"\";","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2232,"byte_end":2256,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"! #     let value = \"\";","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2257,"byte_end":2282,"line_start":61,"line_end":61,"column_start":1,"column_end":26}},{"value":"! #","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2283,"byte_end":2288,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"! let tokens = quote! {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2289,"byte_end":2314,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"!     struct SerializeWith #generics #where_clause {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2315,"byte_end":2369,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"!         value: &'a #field_ty,","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2370,"byte_end":2403,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"!         phantom: ::std::marker::PhantomData<#item_ty>,","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2404,"byte_end":2462,"line_start":66,"line_end":66,"column_start":1,"column_end":59}},{"value":"!     }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2463,"byte_end":2472,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2473,"byte_end":2476,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"!     impl #generics serde::Serialize for SerializeWith #generics #where_clause {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2477,"byte_end":2560,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"!         fn serialize<S>(&self, s: &mut S) -> Result<(), S::Error>","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2561,"byte_end":2630,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"!             where S: serde::Serializer","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2631,"byte_end":2673,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"!         {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2674,"byte_end":2687,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"!             #path(self.value, s)","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2688,"byte_end":2724,"line_start":73,"line_end":73,"column_start":1,"column_end":37}},{"value":"!         }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2725,"byte_end":2738,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2739,"byte_end":2748,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2749,"byte_end":2752,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"!     SerializeWith {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2753,"byte_end":2776,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"!         value: #value,","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2777,"byte_end":2803,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"!         phantom: ::std::marker::PhantomData::<#item_ty>,","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2804,"byte_end":2864,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"!     }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2865,"byte_end":2874,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"! };","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2875,"byte_end":2881,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"! #","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2882,"byte_end":2887,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2888,"byte_end":2895,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2896,"byte_end":2903,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2904,"byte_end":2907,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! ## Recursion limit","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2908,"byte_end":2930,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2931,"byte_end":2934,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! The `quote!` macro relies on deep recursion so some large invocations may","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":2935,"byte_end":3012,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"! fail with \"recursion limit reached\" when you compile. If it fails, bump up","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3013,"byte_end":3091,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"! the recursion limit by adding `#![recursion_limit = \"128\"]` to your crate.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3092,"byte_end":3170,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"! An even higher limit may be necessary for especially large invocations.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3171,"byte_end":3246,"line_start":91,"line_end":91,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":145},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16105,"byte_end":16111,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::tokens::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":146}],"decl_id":null,"docs":" Tokens produced by a [`quote!`] invocation.","sig":null,"attributes":[{"value":"/ Tokens produced by a [`quote!`] invocation.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":15983,"byte_end":16030,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16031,"byte_end":16034,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`quote!`]: macro.quote.html","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16035,"byte_end":16067,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16189,"byte_end":16192,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Tokens>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Empty tokens.\n","sig":null,"attributes":[{"value":"/ Empty tokens.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16160,"byte_end":16177,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16373,"byte_end":16379,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"append","qualname":"<Tokens>::append","value":"fn <U> (&mut Self, U) -> ()","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16251,"byte_end":16293,"line_start":22,"line_end":22,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16298,"byte_end":16301,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Appends the token specified to this list of tokens.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16306,"byte_end":16361,"line_start":24,"line_end":24,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16981,"byte_end":16991,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"append_all","qualname":"<Tokens>::append_all","value":"fn <T, I> (&mut Self, I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16496,"byte_end":16538,"line_start":32,"line_end":32,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16543,"byte_end":16546,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16551,"byte_end":16558,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate quote;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16563,"byte_end":16601,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/ # use quote::{Tokens, ToTokens};","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16606,"byte_end":16642,"line_start":36,"line_end":36,"column_start":5,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16647,"byte_end":16664,"line_start":37,"line_end":37,"column_start":5,"column_end":22}},{"value":"/ struct X;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16669,"byte_end":16682,"line_start":38,"line_end":38,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16687,"byte_end":16690,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for X {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16695,"byte_end":16720,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16725,"byte_end":16775,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/         tokens.append_all(&[true, false]);","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16780,"byte_end":16826,"line_start":42,"line_end":42,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16831,"byte_end":16840,"line_start":43,"line_end":43,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16845,"byte_end":16850,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16855,"byte_end":16858,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let tokens = quote!(#X);","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16863,"byte_end":16891,"line_start":46,"line_end":46,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(tokens.to_string(), \"true false\");","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16896,"byte_end":16945,"line_start":47,"line_end":47,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16950,"byte_end":16957,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16962,"byte_end":16969,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17327,"byte_end":17343,"line_start":64,"line_end":64,"column_start":12,"column_end":28},"name":"append_separated","qualname":"<Tokens>::append_separated","value":"fn <T, I, U> (&mut Self, I, U) -> ()","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17174,"byte_end":17216,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17221,"byte_end":17224,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Appends all of the items in the iterator `I`, separated by the tokens","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17229,"byte_end":17302,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ `U`.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17307,"byte_end":17315,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17861,"byte_end":17878,"line_start":82,"line_end":82,"column_start":12,"column_end":29},"name":"append_terminated","qualname":"<Tokens>::append_terminated","value":"fn <T, I, U> (&mut Self, I, U) -> ()","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17659,"byte_end":17701,"line_start":78,"line_end":78,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17706,"byte_end":17709,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Appends all tokens in the iterator `I`, appending `U` after each","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17714,"byte_end":17782,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ element, including after the last element of the iterator.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":17787,"byte_end":17849,"line_start":81,"line_end":81,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18938,"byte_end":18946,"line_start":131,"line_end":131,"column_start":16,"column_end":24},"name":"IntoIter","qualname":"::tokens::private::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23161,"byte_end":23169,"line_start":17,"line_end":17,"column_start":11,"column_end":19},"name":"ToTokens","qualname":"::to_tokens::ToTokens","value":"ToTokens","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" Types that can be interpolated inside a [`quote!`] invocation.","sig":null,"attributes":[{"value":"/ Types that can be interpolated inside a [`quote!`] invocation.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23047,"byte_end":23113,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23114,"byte_end":23117,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`quote!`]: macro.quote.html","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23118,"byte_end":23150,"line_start":16,"line_end":16,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24676,"byte_end":24685,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"to_tokens","qualname":"::to_tokens::ToTokens::to_tokens","value":"fn (&Self, &mut Tokens) -> ()","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Write `self` to the given `Tokens`.","sig":null,"attributes":[{"value":"/ Write `self` to the given `Tokens`.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23176,"byte_end":23215,"line_start":18,"line_end":18,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23220,"byte_end":23223,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Example implementation for a struct representing Rust paths like","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23228,"byte_end":23296,"line_start":20,"line_end":20,"column_start":5,"column_end":73}},{"value":"/ `std::cmp::PartialEq`:","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23301,"byte_end":23327,"line_start":21,"line_end":21,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23332,"byte_end":23335,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23340,"byte_end":23347,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ extern crate quote;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23352,"byte_end":23375,"line_start":24,"line_end":24,"column_start":5,"column_end":28}},{"value":"/ use quote::{Tokens, ToTokens};","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23380,"byte_end":23414,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23419,"byte_end":23422,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ extern crate proc_macro2;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23427,"byte_end":23456,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/ use proc_macro2::{TokenTree, TokenNode, Spacing, Span};","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23461,"byte_end":23520,"line_start":28,"line_end":28,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23525,"byte_end":23528,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ pub struct Path {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23533,"byte_end":23554,"line_start":30,"line_end":30,"column_start":5,"column_end":26}},{"value":"/     pub global: bool,","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23559,"byte_end":23584,"line_start":31,"line_end":31,"column_start":5,"column_end":30}},{"value":"/     pub segments: Vec<PathSegment>,","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23589,"byte_end":23628,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23633,"byte_end":23638,"line_start":33,"line_end":33,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23643,"byte_end":23646,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for Path {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23651,"byte_end":23679,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23684,"byte_end":23734,"line_start":36,"line_end":36,"column_start":5,"column_end":55}},{"value":"/         for (i, segment) in self.segments.iter().enumerate() {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23739,"byte_end":23805,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/             if i > 0 || self.global {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23810,"byte_end":23851,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/                 // Double colon `::`","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23856,"byte_end":23896,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/                 tokens.append(TokenTree {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23901,"byte_end":23946,"line_start":40,"line_end":40,"column_start":5,"column_end":50}},{"value":"/                     span: Span::def_site(),","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":23951,"byte_end":23998,"line_start":41,"line_end":41,"column_start":5,"column_end":52}},{"value":"/                     kind: TokenNode::Op(':', Spacing::Joint),","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24003,"byte_end":24068,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/                 });","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24073,"byte_end":24096,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/                 tokens.append(TokenTree {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24101,"byte_end":24146,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/                     span: Span::def_site(),","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24151,"byte_end":24198,"line_start":45,"line_end":45,"column_start":5,"column_end":52}},{"value":"/                     kind: TokenNode::Op(':', Spacing::Alone),","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24203,"byte_end":24268,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/                 });","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24273,"byte_end":24296,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24301,"byte_end":24318,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/             segment.to_tokens(tokens);","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24323,"byte_end":24365,"line_start":49,"line_end":49,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24370,"byte_end":24383,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24388,"byte_end":24397,"line_start":51,"line_end":51,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24402,"byte_end":24407,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24412,"byte_end":24417,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # pub struct PathSegment;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24422,"byte_end":24451,"line_start":54,"line_end":54,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24456,"byte_end":24461,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/ # impl ToTokens for PathSegment {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24466,"byte_end":24503,"line_start":56,"line_end":56,"column_start":5,"column_end":42}},{"value":"/ #     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24508,"byte_end":24560,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"/ #         unimplemented!()","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24565,"byte_end":24595,"line_start":58,"line_end":58,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24600,"byte_end":24611,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24616,"byte_end":24623,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24628,"byte_end":24633,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24638,"byte_end":24656,"line_start":62,"line_end":62,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24661,"byte_end":24668,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24932,"byte_end":24943,"line_start":70,"line_end":70,"column_start":8,"column_end":19},"name":"into_tokens","qualname":"::to_tokens::ToTokens::into_tokens","value":"fn (Self) -> Tokens","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Convert `self` directly into a `Tokens` object.","sig":null,"attributes":[{"value":"/ Convert `self` directly into a `Tokens` object.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24720,"byte_end":24771,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24776,"byte_end":24779,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method is implicitly implemented using `to_tokens`, and acts as a","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24784,"byte_end":24858,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ convenience method for consumers of the `ToTokens` trait.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":24863,"byte_end":24924,"line_start":69,"line_end":69,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":134},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3542,"byte_end":3546,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"name":"__rt","qualname":"::__rt","value":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3635,"byte_end":3640,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"parse","qualname":"::__rt::parse","value":"fn (&mut ::Tokens, Span, &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/lib.rs","byte_start":3907,"byte_end":3918,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"append_kind","qualname":"::__rt::append_kind","value":"fn (&mut ::Tokens, Span, TokenNode) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16147,"byte_end":16153,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18144,"byte_end":18150,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18335,"byte_end":18346,"line_start":105,"line_end":105,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18478,"byte_end":18489,"line_start":111,"line_end":111,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18681,"byte_end":18687,"line_start":118,"line_end":118,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":19092,"byte_end":19100,"line_start":137,"line_end":137,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":19248,"byte_end":19254,"line_start":146,"line_end":146,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":19414,"byte_end":19420,"line_start":152,"line_end":152,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":19570,"byte_end":19584,"line_start":156,"line_end":156,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":21381,"byte_end":21387,"line_start":213,"line_end":213,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":22651,"byte_end":22657,"line_start":257,"line_end":257,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":25296,"byte_end":25299,"line_start":86,"line_end":86,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":25441,"byte_end":25444,"line_start":92,"line_end":92,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":25573,"byte_end":25579,"line_start":98,"line_end":98,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":25889,"byte_end":25895,"line_start":112,"line_end":112,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":26695,"byte_end":26699,"line_start":147,"line_end":147,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":26827,"byte_end":26834,"line_start":153,"line_end":153,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":26972,"byte_end":26981,"line_start":159,"line_end":159,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":27099,"byte_end":27108,"line_start":165,"line_end":165,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":27216,"byte_end":27227,"line_start":171,"line_end":171,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":16147,"byte_end":16153,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18144,"byte_end":18150,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":145},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18335,"byte_end":18346,"line_start":105,"line_end":105,"column_start":23,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":15,"index":345},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18478,"byte_end":18489,"line_start":111,"line_end":111,"column_start":35,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":16,"index":2944},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":18681,"byte_end":18687,"line_start":118,"line_end":118,"column_start":23,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":145},"to":{"krate":2,"index":4877}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":19092,"byte_end":19100,"line_start":137,"line_end":137,"column_start":23,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":4967}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":19248,"byte_end":19254,"line_start":146,"line_end":146,"column_start":18,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":145},"to":{"krate":2,"index":6183}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":19414,"byte_end":19420,"line_start":152,"line_end":152,"column_start":16,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":145},"to":{"krate":2,"index":6178}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":19570,"byte_end":19584,"line_start":156,"line_end":156,"column_start":31,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":6178}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":21381,"byte_end":21387,"line_start":213,"line_end":213,"column_start":20,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":145},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/tokens.rs","byte_start":22651,"byte_end":22657,"line_start":257,"line_end":257,"column_start":19,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":145},"to":{"krate":2,"index":6366}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":25296,"byte_end":25299,"line_start":86,"line_end":86,"column_start":55,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":339},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":25441,"byte_end":25444,"line_start":92,"line_end":92,"column_start":41,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":25573,"byte_end":25579,"line_start":98,"line_end":98,"column_start":32,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":29907},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":25889,"byte_end":25895,"line_start":112,"line_end":112,"column_start":19,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":4901},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":26695,"byte_end":26699,"line_start":147,"line_end":147,"column_start":19,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":15,"index":402},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":26827,"byte_end":26834,"line_start":153,"line_end":153,"column_start":19,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":15,"index":424},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":26972,"byte_end":26981,"line_start":159,"line_end":159,"column_start":19,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":15,"index":363},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":27099,"byte_end":27108,"line_start":165,"line_end":165,"column_start":19,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":15,"index":356},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.4.2/src/to_tokens.rs","byte_start":27216,"byte_end":27227,"line_start":171,"line_end":171,"column_start":19,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":15,"index":345},"to":{"krate":0,"index":97}}]}