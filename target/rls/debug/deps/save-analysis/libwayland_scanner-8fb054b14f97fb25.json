{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0","program":"/home/sacha/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_scanner","--edition=2018","/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=8fb054b14f97fb25","-C","extra-filename=-8fb054b14f97fb25","--out-dir","/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps","-L","dependency=/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps","--extern","proc_macro2=/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps/libproc_macro2-38fae6082792867c.rmeta","--extern","quote=/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps/libquote-047c620e096297f8.rmeta","--extern","xml=/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps/libxml-af25c6d32e7b865e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/sacha/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/run/media/sacha/stocky/isousb/isousb/target/rls/debug/deps/libwayland_scanner-8fb054b14f97fb25.rmeta"},"prelude":{"crate_id":{"name":"wayland_scanner","disambiguator":[5052079973464274164,2901622385431835109]},"crate_root":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src","external_crates":[{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13178520346727407053,4792203799537005979]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2148882322900320828,10090971091157684155]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9350415023647295219,11539366983612416085]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16918508776218136521,7301222204984185594]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8592614505596521046,3603009779144947114]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[11473471278279687867,9173974428352637418]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[6623483043773045031,8238845143598726372]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[16610075776745393193,18271409537166901206]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13539701924899711295,15639608856686263496]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5500391874567785391,134362444564425396]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16527680682914559102,12860669916872835133]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/c_code_gen.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[6177375921131439385,5521155600977350614]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/c_code_gen.rs","num":16,"id":{"name":"proc_macro","disambiguator":[9802942093083950462,14743574981727116653]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/c_code_gen.rs","num":17,"id":{"name":"unicode_xid","disambiguator":[11779288112544876086,16717444222009456818]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/c_code_gen.rs","num":18,"id":{"name":"quote","disambiguator":[15686535122566191030,4607643645984875357]}},{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/parse.rs","num":19,"id":{"name":"xml","disambiguator":[4098347861353315113,3067087461632825469]}}],"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":0,"byte_end":6839,"line_start":1,"line_end":197,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3210,"byte_end":3214,"line_start":95,"line_end":95,"column_start":15,"column_end":19},"alias_span":null,"name":"Side","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":0,"byte_end":6839,"line_start":1,"line_end":197,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":36},{"krate":0,"index":57},{"krate":0,"index":113},{"krate":0,"index":141},{"krate":0,"index":162},{"krate":0,"index":171},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198}],"decl_id":null,"docs":" Wayland scanner crate","sig":null,"attributes":[{"value":"! Wayland scanner crate","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":30,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This crate is a rust equivalent of the wayland-scanner tool from the","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":34,"byte_end":106,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"! official wayland C library.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":107,"byte_end":138,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":139,"byte_end":142,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! You can use in your build script to generate the rust code for any","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":143,"byte_end":213,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"! wayland protocol file, to use alongside the `wayland_client` and","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":214,"byte_end":282,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"! `wayland_server` crate to build your applications.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":283,"byte_end":337,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":338,"byte_end":341,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ## How to use this crate","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":342,"byte_end":370,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":371,"byte_end":374,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! This crate is to be used in a build script. It provides the function `generate_code`.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":375,"byte_end":464,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"! It'll allow you to generate the code to use with the `wayland_client` or","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":465,"byte_end":541,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"! `wayland_server` crates for any XML wayland protocol file (NB: you don't","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":542,"byte_end":618,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"! need to do it for the core protocol, which is already included in both crates).","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":619,"byte_end":702,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":703,"byte_end":706,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! First, have the XML files you want to use in your project, somewhere the build script","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":707,"byte_end":796,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"! will be able to read them.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":797,"byte_end":827,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":828,"byte_end":831,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Then, you'll need to invoke both `generate_c_interfaces` *and* `generate_c_code` for","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":832,"byte_end":920,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"! each of these files.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":921,"byte_end":945,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":946,"byte_end":949,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! A sample build script:","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":950,"byte_end":976,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":977,"byte_end":980,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":981,"byte_end":994,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"! extern crate wayland_scanner;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":995,"byte_end":1028,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1029,"byte_end":1032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! use std::env::var;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1033,"byte_end":1055,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"! use std::path::Path;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1056,"byte_end":1080,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1081,"byte_end":1084,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! use wayland_scanner::{Side, generate_code};","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1085,"byte_end":1132,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1133,"byte_end":1136,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! // Location of the xml file, relative to the `Cargo.toml`","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1137,"byte_end":1198,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"! let protocol_file = \"./my_protocol.xml\";","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1199,"byte_end":1243,"line_start":35,"line_end":35,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1244,"byte_end":1247,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! // Target directory for the generate files","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1248,"byte_end":1294,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"! let out_dir_str = var(\"OUT_DIR\").unwrap();","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1295,"byte_end":1341,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"! let out_dir = Path::new(&out_dir_str);","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1342,"byte_end":1384,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1385,"byte_end":1388,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! generate_code(","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1389,"byte_end":1407,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"!     protocol_file,","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1408,"byte_end":1430,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"!     out_dir.join(\"my_protocol_api.rs\"),","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1431,"byte_end":1474,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"!     Side::Client, // Replace by `Side::Server` for server-side code","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1475,"byte_end":1546,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"! );","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1547,"byte_end":1553,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"! ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1554,"byte_end":1561,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1562,"byte_end":1565,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! The above example will output two `.rs` files in the `OUT_DIR` defined by","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1566,"byte_end":1643,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"! cargo. Then, you'll need to include these two generated files (using the","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1644,"byte_end":1720,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"! macro of the same name) to make this code available in your crate.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1721,"byte_end":1791,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1792,"byte_end":1795,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1796,"byte_end":1809,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"! // The generated code will import stuff from wayland_sys","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1810,"byte_end":1870,"line_start":53,"line_end":53,"column_start":1,"column_end":61}},{"value":"! extern crate wayland_sys;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1871,"byte_end":1900,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"! extern crate wayland_client;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1901,"byte_end":1933,"line_start":55,"line_end":55,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1934,"byte_end":1937,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! // Re-export only the actual code, and then only use this re-export","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":1938,"byte_end":2009,"line_start":57,"line_end":57,"column_start":1,"column_end":72}},{"value":"! // The `generated` module below is just some boilerplate to properly isolate stuff","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2010,"byte_end":2096,"line_start":58,"line_end":58,"column_start":1,"column_end":87}},{"value":"! // and avoid exposing internal details.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2097,"byte_end":2140,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"! //","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2141,"byte_end":2147,"line_start":60,"line_end":60,"column_start":1,"column_end":7}},{"value":"! // You can use all the types from my_protocol as if they went from `wayland_client::protocol`.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2148,"byte_end":2246,"line_start":61,"line_end":61,"column_start":1,"column_end":99}},{"value":"! pub use generated::client as my_protocol;","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2247,"byte_end":2292,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2293,"byte_end":2296,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! mod generated {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2297,"byte_end":2316,"line_start":64,"line_end":64,"column_start":1,"column_end":20}},{"value":"!     // The generated code tends to trigger a lot of warnings","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2317,"byte_end":2381,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"!     // so we isolate it into a very permissive module","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2382,"byte_end":2439,"line_start":66,"line_end":66,"column_start":1,"column_end":58}},{"value":"!     #![allow(dead_code,non_camel_case_types,unused_unsafe,unused_variables)]","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2440,"byte_end":2520,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"!     #![allow(non_upper_case_globals,non_snake_case,unused_imports)]","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2521,"byte_end":2592,"line_start":68,"line_end":68,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2593,"byte_end":2596,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"!     pub mod client {","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2597,"byte_end":2621,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"!         // If you protocol interacts with objects from other protocols, you'll need to import","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2622,"byte_end":2719,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"!         // their modules, like so:","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2720,"byte_end":2758,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"!         pub(crate) use wayland_client::protocol::{wl_surface, wl_region};","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2759,"byte_end":2836,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"!         include!(concat!(env!(\"OUT_DIR\"), \"/my_protocol_code.rs\"));","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2837,"byte_end":2908,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"!     }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2909,"byte_end":2918,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2919,"byte_end":2924,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2925,"byte_end":2932,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"recursion_limit = \"128\"","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2934,"byte_end":2961,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"warn(missing_docs)","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":2962,"byte_end":2984,"line_start":80,"line_end":80,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":330},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82548,"byte_end":82554,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Client","qualname":"::side::Side::Client","value":"Side::Client","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" wayland client applications\n","sig":null,"attributes":[{"value":"/ wayland client applications","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82512,"byte_end":82543,"line_start":11,"line_end":11,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":332},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82588,"byte_end":82594,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Server","qualname":"::side::Side::Server","value":"Side::Server","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" wayland compositors\n","sig":null,"attributes":[{"value":"/ wayland compositors","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82560,"byte_end":82583,"line_start":13,"line_end":13,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":329},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82501,"byte_end":82505,"line_start":10,"line_end":10,"column_start":10,"column_end":14},"name":"Side","qualname":"::side::Side","value":"Side::{Client, Server}","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":332}],"decl_id":null,"docs":" Side to generate","sig":null,"attributes":[{"value":"/ Side to generate","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82327,"byte_end":82347,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82348,"byte_end":82351,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This enum represents the two possible sides of","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82352,"byte_end":82402,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/ the protocol API that can be generated.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82403,"byte_end":82446,"line_start":8,"line_end":8,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3856,"byte_end":3869,"line_start":113,"line_end":113,"column_start":8,"column_end":21},"name":"generate_code","qualname":"::generate_code","value":"fn <P1, P2> (P1, P2, Side) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol using the C system libs","sig":null,"attributes":[{"value":"/ Generate the code for a protocol using the C system libs","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3454,"byte_end":3514,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3515,"byte_end":3518,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ See this crate toplevel documentation for details.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3519,"byte_end":3573,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3574,"byte_end":3577,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3578,"byte_end":3587,"line_start":107,"line_end":107,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3588,"byte_end":3591,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: a path to the XML file describing the protocol, absolute or relative to","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3592,"byte_end":3681,"line_start":109,"line_end":109,"column_start":1,"column_end":90}},{"value":"/   the build script using this function.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3682,"byte_end":3725,"line_start":110,"line_end":110,"column_start":1,"column_end":44}},{"value":"/ - `target`: the path of the file to store the code in.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3726,"byte_end":3784,"line_start":111,"line_end":111,"column_start":1,"column_end":59}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":3785,"byte_end":3848,"line_start":112,"line_end":112,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":4310,"byte_end":4346,"line_start":122,"line_end":122,"column_start":8,"column_end":44},"name":"generate_code_with_destructor_events","qualname":"::generate_code_with_destructor_events","value":"fn <P1, P2> (P1, P2, Side, &[(&str, &str)]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol with aditionnal destructor events","sig":null,"attributes":[{"value":"/ Generate the code for a protocol with aditionnal destructor events","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":4010,"byte_end":4080,"line_start":117,"line_end":117,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":4081,"byte_end":4084,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ Same as `generate_code`, but allows you to additionnaly specify some events","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":4085,"byte_end":4164,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ (in the format `(\"interface_name\", \"event_name\")`) as being destructor, as this","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":4165,"byte_end":4248,"line_start":120,"line_end":120,"column_start":1,"column_end":84}},{"value":"/ information is not encoded in the protocol files.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":4249,"byte_end":4302,"line_start":121,"line_end":121,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5648,"byte_end":5669,"line_start":166,"line_end":166,"column_start":8,"column_end":29},"name":"generate_code_streams","qualname":"::generate_code_streams","value":"fn <P1, P2> (P1, &mut P2, Side) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5261,"byte_end":5316,"line_start":157,"line_end":157,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5317,"byte_end":5320,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Like `generate_code`, but takes IO Streams directly rather than filenames","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5321,"byte_end":5398,"line_start":159,"line_end":159,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5399,"byte_end":5402,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5403,"byte_end":5412,"line_start":161,"line_end":161,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5413,"byte_end":5416,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: an object `Read`-able containing the XML protocol file","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5417,"byte_end":5489,"line_start":163,"line_end":163,"column_start":1,"column_end":73}},{"value":"/ - `target`: a `Write`-able object to which the generated code will be outputted to","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5490,"byte_end":5576,"line_start":164,"line_end":164,"column_start":1,"column_end":87}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5577,"byte_end":5640,"line_start":165,"line_end":165,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":6144,"byte_end":6188,"line_start":175,"line_end":175,"column_start":8,"column_end":52},"name":"generate_code_streams_with_destructor_events","qualname":"::generate_code_streams_with_destructor_events","value":"fn <P1, P2> (P1, &mut P2, Side, &[(&str, &str)]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams with aditionnal destructor events","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams with aditionnal destructor events","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5817,"byte_end":5906,"line_start":170,"line_end":170,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5907,"byte_end":5910,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Same as `generate_code_streams`, but allows you to additionnaly specify some events","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5911,"byte_end":5998,"line_start":172,"line_end":172,"column_start":1,"column_end":88}},{"value":"/ (in the format `(\"interface_name\", \"event_name\")`) as being destructor, as this","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":5999,"byte_end":6082,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ information is not encoded in the protocol files.","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/lib.rs","byte_start":6083,"byte_end":6136,"line_start":174,"line_end":174,"column_start":1,"column_end":54}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/common_gen.rs","byte_start":36198,"byte_end":36202,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":78300,"byte_end":78308,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":78740,"byte_end":78749,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":79228,"byte_end":79235,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":79913,"byte_end":79916,"line_start":86,"line_end":86,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":80377,"byte_end":80381,"line_start":109,"line_end":109,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":80786,"byte_end":80791,"line_start":130,"line_end":130,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":81161,"byte_end":81165,"line_start":155,"line_end":155,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82604,"byte_end":82608,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/common_gen.rs","byte_start":36198,"byte_end":36202,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":279},"to":{"krate":18,"index":77}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":78300,"byte_end":78308,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":78740,"byte_end":78749,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":79228,"byte_end":79235,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":79913,"byte_end":79916,"line_start":86,"line_end":86,"column_start":6,"column_end":9},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":80377,"byte_end":80381,"line_start":109,"line_end":109,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":80786,"byte_end":80791,"line_start":130,"line_end":130,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/protocol.rs","byte_start":81161,"byte_end":81165,"line_start":155,"line_end":155,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sacha/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.25.0/src/side.rs","byte_start":82604,"byte_end":82608,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}}]}